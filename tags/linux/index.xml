<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linux on 徐乾朝的博客</title>
    <link>https://againwq.github.io/tags/linux/</link>
    <description>Recent content in linux on 徐乾朝的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 05 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://againwq.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debian12中GoldenDict词典软件的使用</title>
      <link>https://againwq.github.io/posts/debian%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8/goldendict/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/debian%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8/goldendict/</guid>
      <description>GoldenDict的基本使用，提供词典资源和调用百度api翻译的方法</description>
      <content:encoded><![CDATA[<h2 id="一goldendict基本介绍">一、GoldenDict基本介绍</h2>
<p>   GoldenDict是一款开源的词典软件,它具有高度的定制性,可以自定义软件界面,它支持导入词典数据、调用外部网站和自定义程序等功能,对于需要
在学习中阅读英文文献时非常方便使用。在Debian12中可以直接通过apt命令下载该软件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt update
</span></span><span class="line"><span class="cl">sudo apt install goldendict
</span></span></code></pre></div><p>  下载完毕后,软件界面如下：</p>
<p><img loading="lazy" src="/images/goldendict%e8%bd%af%e4%bb%b6.png" alt="GoldenDict软件界面"  />
</p>
<p>   在上面工具栏的<strong>编辑 -&gt; 首选项 -&gt; 界面</strong>可以设置界面语言,并且可以配置内置的一些主题风格,本文不讨论如何自定义界面风格。在<strong>编辑 -&gt; 首选项 -&gt; 词典</strong>可以配置词典数据来源。Golden支持多种词典来源,包括本地的词典数据、远程词典服务器、调用搜索引擎和调用脚本程序等。本文会给出一些在网络上搜集的本地词典资源（感谢这些资源的提供者）,并给出一个调用<strong>百度官方api</strong>进行翻译的python脚本。</p></p>
<h2 id="二词典资源配置">二、词典资源配置</h2>
<h3 id="1本地词典资源">1.本地词典资源</h3>
<p>   打开<strong>编辑 -&gt; 首选项 -&gt; 词典 -&gt; 词典来源 -&gt; 文件</strong>,这里可以配置词典文件的路径,如果是文件夹路径需要勾上递归搜索,然后点击应用,这样GoldenDict会扫描所有指定的词典文件,并为其生成索引。如果词典数量比较多这个过程会比较漫长,这取决于你的电脑的性能。索引生成完毕后这些词典就可以使用了,索引文件会存储在本地磁盘中,下一次打开不需要重新生成了。我自己用的词典资源：
<a href="https://pan.baidu.com/s/10IJi6kACrTUGvQcmH_E-Bw?pwd=bp47">词典资源</a> 提取码: bp47。</br>
   示例效果如图所示：</p>
<p><img loading="lazy" src="/images/goldendict%e6%95%88%e6%9e%9c.png" alt="GoldenDict示例效果"  />
</p></p>
<h3 id="2-调用百度翻译接口">2. 调用百度翻译接口</h3>
<p>   拥有这些本地词典后,GoldenDict会帮助你从这些本地词典搜索你要查询的单词或者词语,只要你的词典中有对应的记录即可。但是GoldenDict并不支持句子翻译,即它不会把句子拆成一组单词分别去查询,除非你的词典中有这样一条句子的翻译记录。因此我考虑将百度翻译接入到GoldenDict中这样方便进行一些简短的句子翻译。</br>
   首先需要在<a href="https://api.fanyi.baidu.com/">百度翻译api</a>注册账户,选择通用翻译服务,进行认证后高级版通用翻译服务每个月会有一定量的免费额度。然后在<strong>管理控制台获取你的APP ID和密钥</strong>,替换下面代码中的APP ID和密钥,并配置日志文件路径：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">re</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">hashlib</span> <span class="kn">import</span> <span class="n">md5</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 设置你自己的appid和appkey</span>
</span></span><span class="line"><span class="cl"><span class="n">appid</span> <span class="o">=</span> <span class="s1">&#39;xxxxxxxxxxxxxxxxxx&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">appkey</span> <span class="o">=</span> <span class="s1">&#39;xxxxxxxxxxxxxxxxxx&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">EN_LIMIT</span> <span class="o">=</span> <span class="mi">800</span> <span class="c1"># 每800个英文字符添加一个换行符</span>
</span></span><span class="line"><span class="cl"><span class="n">ZH_LIMIT</span> <span class="o">=</span> <span class="mi">300</span>  <span class="c1"># 每300个汉字添加一个换行符</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">EN_MIN_NUM</span> <span class="o">=</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="n">ZH_MIN_NUM</span> <span class="o">=</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">hasZhChar</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;[\u4e00-\u9fa5]&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">match</span> <span class="o">=</span> <span class="n">pattern</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nb">bool</span><span class="p">(</span><span class="k">match</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">make_md5</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">md5</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">encoding</span><span class="p">))</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">full2half</span><span class="p">(</span><span class="n">s</span><span class="p">):</span> <span class="c1">#全角转成半角</span>
</span></span><span class="line"><span class="cl">    <span class="n">n</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">num</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="n">char</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mh">0x3000</span><span class="p">:</span>        
</span></span><span class="line"><span class="cl">            <span class="n">num</span> <span class="o">=</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="mh">0xFF01</span> <span class="o">&lt;=</span><span class="n">num</span> <span class="o">&lt;=</span> <span class="mh">0xFF5E</span><span class="p">:</span> 
</span></span><span class="line"><span class="cl">            <span class="n">num</span> <span class="o">-=</span> <span class="mh">0xFEE0</span>
</span></span><span class="line"><span class="cl">        <span class="n">num</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">n</span> <span class="o">+=</span> <span class="n">num</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">n</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">split_data</span><span class="p">(</span><span class="n">sentences</span><span class="p">,</span> <span class="n">limit</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sentences</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">EN_LIMIT</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span> <span class="o">=</span> <span class="n">sentences</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">positon</span> <span class="o">=</span> <span class="n">EN_LIMIT</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">sentences</span><span class="p">[</span><span class="n">positon</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">&#39; &#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">positon</span> <span class="o">-=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span> <span class="o">+=</span> <span class="n">sentences</span><span class="p">[:</span><span class="n">positon</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span> <span class="o">+=</span> <span class="n">split_data</span><span class="p">(</span><span class="n">sentences</span><span class="p">[</span><span class="n">positon</span> <span class="o">+</span> <span class="mi">1</span><span class="p">:],</span> <span class="n">limit</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">from_lang</span> <span class="o">=</span> <span class="s1">&#39;en&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">to_lang</span> <span class="o">=</span>  <span class="s1">&#39;zh&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">endpoint</span> <span class="o">=</span> <span class="s1">&#39;http://api.fanyi.baidu.com&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">path</span> <span class="o">=</span> <span class="s1">&#39;/api/trans/vip/translate&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span> <span class="o">=</span> <span class="n">endpoint</span> <span class="o">+</span> <span class="n">path</span>
</span></span><span class="line"><span class="cl"><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&#34;%Y-%m-</span><span class="si">%d</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">localtime</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">sentences</span> <span class="o">=</span> <span class="n">full2half</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">salt</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">32768</span><span class="p">,</span> <span class="mi">65536</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">hasZhChar</span><span class="p">(</span><span class="n">sentences</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">from_lang</span> <span class="o">=</span> <span class="s1">&#39;zh&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">to_lang</span> <span class="o">=</span> <span class="s1">&#39;en&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sentences</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">ZH_MIN_NUM</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;汉字数量小于</span><span class="si">{</span><span class="n">ZH_MIN_NUM</span><span class="si">}</span><span class="s2">个,不翻译&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">from_lang</span> <span class="o">=</span> <span class="s1">&#39;en&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">to_lang</span> <span class="o">=</span> <span class="s1">&#39;zh&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sentences</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">))</span> <span class="o">&lt;</span> <span class="n">EN_MIN_NUM</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;单词数量小于</span><span class="si">{</span><span class="n">EN_MIN_NUM</span><span class="si">}</span><span class="s2">个,不翻译&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Build request</span>
</span></span><span class="line"><span class="cl">    <span class="n">query</span> <span class="o">=</span> <span class="n">split_data</span><span class="p">(</span><span class="n">sentences</span><span class="p">,</span> <span class="n">EN_LIMIT</span><span class="p">)</span> <span class="k">if</span> <span class="n">from_lang</span> <span class="o">==</span> <span class="s1">&#39;en&#39;</span> <span class="k">else</span> <span class="n">split_data</span><span class="p">(</span><span class="n">sentences</span><span class="p">,</span> <span class="n">ZH_LIMIT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">sign</span> <span class="o">=</span> <span class="n">make_md5</span><span class="p">(</span><span class="n">appid</span> <span class="o">+</span> <span class="n">query</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">salt</span><span class="p">)</span> <span class="o">+</span> <span class="n">appkey</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;appid&#39;</span><span class="p">:</span> <span class="n">appid</span><span class="p">,</span> <span class="s1">&#39;q&#39;</span><span class="p">:</span> <span class="n">query</span><span class="p">,</span> <span class="s1">&#39;from&#39;</span><span class="p">:</span> <span class="n">from_lang</span><span class="p">,</span> <span class="s1">&#39;to&#39;</span><span class="p">:</span> <span class="n">to_lang</span><span class="p">,</span> <span class="s1">&#39;salt&#39;</span><span class="p">:</span> <span class="n">salt</span><span class="p">,</span> <span class="s1">&#39;sign&#39;</span><span class="p">:</span> <span class="n">sign</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Send request</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="s2">&#34;error_code&#34;</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Error: &#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;length: &#34;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">query</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">res</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">result</span><span class="p">[</span><span class="s2">&#34;trans_result&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">res</span> <span class="o">+=</span> <span class="n">item</span><span class="p">[</span><span class="s2">&#34;dst&#34;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39; &#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>
</span></span></code></pre></div><p>   然后需要在GoldenDict中配置,打开<strong>编辑 -&gt; 词典 -&gt; 词典来源 -&gt; 程序</strong>,添加下面一条记录：</p>
<table>
<thead>
<tr>
<th>已启用</th>
<th>类型</th>
<th>名称</th>
<th>命令行</th>
</tr>
</thead>
<tbody>
<tr>
<td>✔</td>
<td>文本</td>
<td>Baidu</td>
<td>python 你的python脚本的绝对路径 %GDWORD%</td>
</tr>
</tbody>
</table>
<p>   为了方便使用GoldenDict,而不是每次都打开软件然后复制进去,我们需要启用<strong>编辑 -&gt; 首选项 -&gt; 热键</strong>,然后<strong>勾上使用Ctrl + C + C获取剪切板的热键</strong>,这样GoldenDict只要在后台启动,我们就可以使用热键调出翻译窗口了,效果如图所示：</p>
<p><img loading="lazy" src="/images/%e7%99%be%e5%ba%a6%e7%bf%bb%e8%af%91%e6%95%88%e6%9e%9c%e5%b1%95%e7%a4%ba.png" alt="百度翻译和热键效果展示"  />
</p>
<p>   上面的代码没有像图片中一样提供实时获取额度的功能,这个功能和真实的额度有一些小偏差,而且存在一些小bug,因此就不放上来了。读者可以自行修改代码实现自定义功能。
当然,百度翻译api网站的控制台可以查看每月的额度,只是不是实时的。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
