<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>徐乾朝的博客</title>
    <link>https://againwq.github.io/</link>
    <description>Recent content on 徐乾朝的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 04 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://againwq.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C使用泰勒展开实现sinx</title>
      <link>https://againwq.github.io/posts/linux_c/c%E5%AE%9E%E7%8E%B0sinx%E5%B9%B6%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/linux_c/c%E5%AE%9E%E7%8E%B0sinx%E5%B9%B6%E4%BC%98%E5%8C%96/</guid>
      <description>一、sinx泰勒展开的C实现 1.sinx泰勒展开公式 sinx的泰勒展开如下： $$ sinx = x - \frac{x^3}{3!} + \frac{x^5}{5!} - \frac{x^7}{7!} + &amp;hellip; + \frac{(-1)^n}{(2n + 1)!}x^{2n+1} $$
其中n从0开始计算，我采用的公式形态上是x=0处的泰勒展开。实际上我们可以把x写成$x = x + x_0$来实现$x=x_0$处的展开
2.C实现sinx泰勒展开 我们通过控制精度来控制展开项数，并且我们只考虑$0-2\pi$的范围，归一化处理我们之后再详细考虑，通过泰勒展开公式我们的C程序如下，
#include &amp;lt;math.h&amp;gt; #define degree 1e-2 float fun_sin(float x) { float res, term; int i; int factor; // 阶乘 term = x; // 每一项的结果 factor = 1; res = term; for (i = 1; fabs(term) &amp;gt; degree; i++) { factor *= (2 * i) * (2 * i + 1); term = pow(-1, i) * pow(x, 2 * i + 1) / factor; res += term; } return res; } 上面的代码基本是严格按照公式计算的，可惜的是它并不能正常工作，这涉及到计算阶乘时整数溢出的问题。当输入比较小，比如0.</description>
    </item>
    
    <item>
      <title>5G知识点补充</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85/</guid>
      <description>5G知识点补充 5G系统间消息 系统间消息分类 在5G系统中，系统消息可分为三大类(有的地方是两类, MSI和OSI)：
Minimum System Information (MSI) &amp;ndash;最小系统消息 包括MIB和SIB1 Remaining Minimum System Information (RMSI) &amp;ndash;剩余最小系统消息 只有SIB1 Other System Information (OSI)&amp;ndash;其他系统消息 SIB2 ~ SIB9 系统消息传输 发送时，MIB通过RRC消息MasterInformationBlock发送 SIB1通过RRC消息SystemInformationBlock1发送 而SIB2~SIB9封装在称为RRC消息SystemInformation中，并且在SystemInformation消息中具体封装哪些SIB是可配置的，不同小区可配置不同的值。 发送时，MSI被周期性地广播，周期固定。(必须通过广播) OSI的发送方式有两种：一，周期广播，二，动态发送， UE开机接入NR小区后，MIB和SIB1是一定会解读的，而SIB2~9的内容是否需要解读以及何时解读取决于小区配置
系统消息具体参数 MIB 调制方式QPSK 发送周期80ms 传输信道BCH(映射到PBCH) 获取方式: 小区搜索过程解码PSS和SSS计算出PCI解码MIB 内容: SIB1解码需要的内容(CORESET0)和PDCCH的Search Space, 系统帧号(SFN)、半帧指示、SCS、小区禁止信息 SIB1 传输信道DL-SCH(映射到PDSCH)(PDSCH需要PDCCH调度才能用) 发送周期160ms, SIB1在DL-SCH上以160ms的总传输周期和160ms内的可变传输重复周期(默认20ms)发送. 内容: 小区选择信息、PLMN、TAC、小区标识、RAN通知信息、OSI的SI调度信息、服务小区信息 SIB2: 同频、异频、异系统内小区重选公共参数, 服务频点小区重选相关信息 SIB3: 同频小区重选的邻小区参数 SIB4: 异频小区重选的邻小区参数 SIB5: 异系统小区重选的邻小区参数 5G的MCG和SCG 这个概念是在**EN-DC(双连接场景,即NSA option3场景,终端需要同时连4G与5G网络)**才有的
双连接概念 EN-DC就是指4G无线接入网与5G NR的双连接(option3, 4G核心网, 4G基站为MN(主节点), 5G基站为SN(辅节点)) NE-DC指5G NR与4G无线接入网的双连接(option4, 5G核心网) NGEN-DC指在5G核心网下的4G无线接入网与5G NR的双连接(option7) MCG与SCG MCG: 主小区组, 下面有PCell(主小区), SCell(辅小区) SCG: 辅小区组, 下面有PSCell(主辅小区), SCell(辅小区) 同一组的不同的小区通过**CA技术(载波聚合)**联合在一起 用于发起初始接入的小区，这个小区称为PCell 车联网知识 频段: 5905 ~ 5925MHz V2X分为两种, DSRC和C-V2X</description>
    </item>
    
    <item>
      <title>5G物理层过程</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%89%A9%E7%90%86%E5%B1%82%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%89%A9%E7%90%86%E5%B1%82%E8%BF%87%E7%A8%8B/</guid>
      <description>5G物理层过程概述 物理层,即PHY层
物理层主要功能 物理信道调制与解调 频率与时间同步 无线特征测量, 并向高层提供指示 MIMI天线处理 物理射频处理 5G的NR帧结构 见物理信道与信号那一篇
5G 帧结构配置 半静态配置: RRC配置, 小区专用与UE专用两种方式 动态配置: DCI(上行信道信息)配置, 使用SFI(时隙格式指示)和DCI调度两种方式 支持不同周期的配置 支持双周期配置 具体见物理信道与信号那一篇
物理层资源 基本时间为Tc = 1 / (f * N), 4G是其64倍
天线端口 小区搜索 PCI = PSS + 3 * SSS 获得PCI可以得到DMRS(解调参考信号)以解调PBCH信道 MIB消息在PBCH上传输 SIB1消息在PDCCH和PDSCH上传输 PLMN PLMN分为手动和自动模式
频点选择 根据栅格计算频点
小区搜索 PSS 3条长度为127的伪随机序列,采用BPSK M序列 中间连续127个子载波, 两侧加8和9个保护间隔, 共144个子载波 PSS提供的计算PCI的N取值0,1,2 SSS 336条长度为127的伪随机序列,采用BPSK M序列 中间连续127个子载波, 两侧加8和9个保护间隔, 共144个子载波 SSS提供的计算PCI的N取值0 ~ 355 PCI PCI是物理小区ID, NR中,总共有1008个物理层小区ID UE获取PCI后, 解调DMRS for PBCH, 获取SSB的位置索引 PSS和SSS资源位置 PSS、SSS和PBCH构成SSB PSS、SSS、和PBCH公用天线端口号P=4000 SSB的子载波间隔不能取μ=2,即60KHz, μ=0,1为typeA, μ=3,4为typeB SSB最长符号数可取4,8,64(一个半帧内5ms, typeA) SSB周期: 5ms, 10ms, 20ms, 40ms, 80ms, 160ms 在初始小区搜索过程中,终端假定SSB周期为20ms SSB详细见物理信道与信号 小区选择和重选 小区选择 概述 UE在RRC_IDLE和RRC_INACTIVATE状态下进行 UE需要先完成PLMN的选择(小区搜索的部分), 在已选择的PLMN上选择合适的小区,获取合适的服务,监听控制信道,这个过程即小区选择过程 根据小区重选准则, UE寻找其他更合适的小区进行小区重选,重选后的小区若不属于UE已注册的TAC列表内,UE需要发起位置登记 小区禁止参数在MIB中给出(cellBarred) 小区预留参数在SIB1中给出(cellReservedForOperatorUse) 小区选择策略 UE先通过小区测量,测量波束强度再进行小区选择 多波束情况下,UE根据检测到的SSB最大波束测量值与门限对比,若大于门限值,则选择这个最强波束的小区,否则对检测到的所有最强波束进行线性平均,作为小区的最终测量值 相比于4G, 5G小区选择多了一个Qoffsettemp参数 小区重选 小区重选过程 小区重选是根据**频点优先级(SSB的频点优先级,0 ~ 7)**进行重选的 频点优先级获取方式: 系统消息和专用信令(如RRC Release消息) 重选流程: 重选参数获取 -&amp;gt; 邻区启测判决 -&amp;gt; 小区重选判决 重选参数获取 注: 只有SIB系统消息,没有MIB系统消息</description>
    </item>
    
    <item>
      <title>5G网络架构及组网部署</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%BB%84%E7%BD%91%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%BB%84%E7%BD%91%E9%83%A8%E7%BD%B2/</guid>
      <description>5G网络架构 5G网络架构概述 5G移动通信系统包括5GC(5G核心网)和NG-RAN(无线接入网) ng-eNB: 增强型4G基站,可完成部分5G功能 gNB: 5G基站(对应4G中的eNB) Xn接口: 基站间接口(对应4G中的X2接口),传输数据和信令 NG接口: 接入网网元接入到核心网的接口(对应4G中的S1接口) 5G核心网网元: AMF, UPF, SMF AAU: RRU(射频单元) + 天线 CU和DU: CU是集中单元,DU是分布单元,CU、DU可以集中部署也可以分开部署 5G基站 = CU + DU + AAU,但是CU一般集中部署在靠近5GC的位置,AAU部署在靠近UE端的位置
核心网和接入网的架构演进 核心网架构演进 接入网架构演进 需要注意5G中接入网各个网元与协议栈对应关系
CU: RRC层 + PDCP层 DU: RLC层 + MAC层 + 部分PHY层 AAU: 部分PHY层 5G网元功能及其接口 5G网元以及接口表示 点对点接口表示(N1,N2,N3 &amp;hellip;.) 服务接口表示(基于服务的接口表示,Nnssf,Nnef&amp;hellip;) CU与DU CU可以分为CU-C(控制面)与CU-U(用户面) CU与DU之间的接口是F1接口 CU-C与CU-U之间的接口是E1接口 CU包含RRC层与PDCP层, CU-C包含RRC与PDCP的控制面功能,CU-U就包含PDCP的用户面功能 CU与DU的协议栈划分:
CU占的协议栈越多,越方便控制面集中,集中化调度性能提升,但是传输带宽会升高,时延要求也更高(要求时延越低) 3GPP标准划分方案为Option2,将PDCP划分到CU中,PDCP上移容易形成数据锚点,便于支持双链接/单连接 5G主要网元功能 UFP
gNB间切换的本地移动锚点 连接到移动通信网络外部的PDU会话点 用户数据包的路由与转发 对用户的Qos流的映射与处理 SMF
PDU会话的建立与删除 UE IP地址的分配 选择控制用户控制面功能(选择UPF) Qos的策略与控制 AMF</description>
    </item>
    
    <item>
      <title>5G无线网络技术</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF%E5%8F%8A%E5%BA%94%E7%94%A8/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF%E5%8F%8A%E5%BA%94%E7%94%A8/</guid>
      <description>5G无线网络技术 5G概述 5G三大业务场景 eMBB: 增强移动带宽场景、连续广域覆盖场景、热点高容量场景、大带宽、高速率、大容量、高覆盖 mMTC: 大连接场景 uRLLC: 低时延、高可靠场景 5G八大关键指标 5G技术点: 移动互联网 + 移动物联网
5G空口技术框架 5G网络架构 5G网络划分为接入平面、控制平面、转发平面
接入平面: 统一的多无线接入技术融合、无线资源调度与共享 控制平面: 控制集中化、简单化, 服务差异化、开放化 转发平面: 用户面下沉分布式网关、移动边缘内容与计算 具体看5G网络架构与组网部署的笔记
大规模天线(Massive MIMO) 主要解决5G的覆盖范围和容量问题
大规模天线: 大量天线为相对少的用户提供同传服务
大规模天线概述 5G中天线有水平波束和垂直波束的概念, 4G中没有垂直波束的概念
大规模天线的技术优势
大规模天线的几种增益
阵列增益 分集增益 空间复用增益 干扰抑制增益 波束赋形 对于下行MIMO: 区分数据流,使用DMRS信号(解调参考信号) 对于上行MIMO: 区分用户, 使用DMRS信号(解调参考信号) 波束扫描 在下行过程中, 基站依次使用不同指向的波束发射无线信号,该过程被称作波束扫描, 与此同时,用户测量不同波束发射出的无线信号, 并向基站报告相关信息,基站根据用户报告确定对准该用户的最佳发射波束
为了快速对准波束, 5G标准采取了分级扫描的策略,即由宽到窄扫描
波束恢复 PRACH信号是随机接入过程中的信号
大规模天线的应用场景 热点场景 大型公共集会 3D覆盖场景 UDN技术(超密集网络部署) 增加单位面积内小基站的密度, 可以改善网络覆盖, 提高系统容量(提升容量和连接数)
UDN关键技术 干扰抑制与管理: 使用DMIMO技术(分布式MIMO)和 Small cell on/off技术(关闭没有用户连接或无需提供额外容量的小小区) 移动性管理: 使用虚拟层技术(把密集部署的小基站构建虚拟多层网络, 分为虚拟层和实体层)和软扇区技术(解决UDN难以部署的问题) 联合传输与反馈 UDN应用场景</description>
    </item>
    
    <item>
      <title>5G物理信号与信道</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%89%A9%E7%90%86%E4%BF%A1%E9%81%93%E4%B8%8E%E4%BF%A1%E5%8F%B7/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E7%89%A9%E7%90%86%E4%BF%A1%E9%81%93%E4%B8%8E%E4%BF%A1%E5%8F%B7/</guid>
      <description>5G物理信道与信号 5G时频域概念 名词解释 CC: 载波, 1个载波可以配置1个或多个BWP BWP: 部分带宽,1个BWP包括n个RB或RBG RBG: 一个RBG等于2,4,8,16个RB,是数据信道PDSCH调度的基本单位 RB: 1个RB等于12个子载波,是数据信道PUSCH调度的基本单位 SCS: 子载波间隔的频率(不是子载波) CCE: 控制信道资源的组成单位,一个CCE=6个REG, 一个PDCCH包含几个CCE, 由聚合等级1,2,4,8,16共5种决定 REG: 控制信道资源分配的基本单位, 频域上1个REG=12个RE,即12个子载波(REG类似于RB), 时域上是1个符号 5G频段介绍 FR1频段: 410MHz &amp;ndash; 7125MHz(Sub6G) FR2频段: 24250MHz &amp;ndash; 52600MHz(毫米波) 与4G相比,取消了1.4M和3MHz的带宽
注意图中标注的几个频段n28, n41, n79
5G信道带宽的结构 保护带宽 传输带宽 保护带宽 最大传输带宽 注: FR1和FR2都支持的传输带宽的SCS为 60KHz
最小保护带宽 双工方式 TDD: 时分双工, 上下行频段相同 FDD: 频分双工, 上下行频段不同 SDL: 补充下行频段, 只有下行频段 SUL: 补充上行频段, 只有上行频段 SDL和SUL频段只能做下行或者上行，因此不能独立工作，仅作为辅助频段，这些频段的频率较低，覆盖性能较好，可用来弥补上下行覆盖的不足。
工信部分配频段 5G频域资源 BWP 全称Bandwidth Part, 是整个带宽上的一个子集,每个BWP的大小,以及使用的SCS和CP(循环前缀)都可以灵活配置
DL和UL分别最多可以配置4个专有BWP BWP的带宽必须大于等于SSB,但是BWP中不一定包含SSB 对同一个UE来说,DL或UL同一时刻只能有一个BWP处于激活状态 BWP分为四类,分别是初始BWP, 专用BWP, 激活BWP(UE指定), 默认BWP(UE指定)</description>
    </item>
    
    <item>
      <title>5G信令与协议</title>
      <link>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E4%BF%A1%E4%BB%A4%E4%B8%8E%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/posts/%E5%A4%A7%E5%94%90%E6%9D%AF/5g%E4%BF%A1%E4%BB%A4%E4%B8%8E%E5%8D%8F%E8%AE%AE/</guid>
      <description>网络基本架构及接口 5GC（核心网）: AMF（NAS安全,移动性状态管理）,SMF（UE 的ip申请,PDU会话控制）,UPF（PDU管理,移动锚点） NG-RAN（接入网） gNB: 5G基站，由CU+DU构成 Ng接口（接入网与核心网接口）两个层面,用户面与控制面相分离,控制面协议（SCTP, IP, 数据链路层、物理层）, 用户面协议（GTP-U,UDP,IP 数据链路和物理层） Xn接口（gNB,即基站之间的接口）,协议栈Ng相同 F1接口（CU与DU的接口） E1接口（CU与CU的接口）只有控制面协议（SCTP, IP, 数据链路层、物理层） 协议栈见图片
用户面协议栈 控制面协议栈 5G协议栈 NR无线资源控制层（RRC层） 系统消息广播 RRC连接控制 异系统移动性管理（Inter-RAT） 测量配置和报告 一般性协议错误处理 UE能力转换 NR2层概述 1.SDAP层（服务数据适配层） SDAP子层由RRC配置 SDAO子层将Qos映射到DRBs 在DL中,一个或多个Qos流可能映射到一个DRB 在UL中,一次Qos流仅映射到一个DRB 2.PDCP层（分组数据汇聚层） 数据传输(用户面或控制面) PDCP SN的维护 使用ROHC协议的报头的压缩和解压缩 加密和解密 完整性保护和验证 基于定时器的SDU丢弃 路由重新排序和按顺序交付 重复丢弃 3.RLC层（无线链路控制层） 三种传输模式:TM（透明模式）,UM（非确认模式）,AM（确认模式）
传送上层PDU 通过ARQ纠错（仅用于AM数据传输） RLC SDU的分段与重组（仅用于UM和AM） RLC SDU的重新分段（UM和AM） 重复检测（AM） RLC SDU丢弃（AM和UM） RLC重建 协议错误检测（AM数据传输） 4.MAC（媒体访问控制） 逻辑信道与传输信道之间的映射 来自一个或不同逻辑信道的MAC SDU多路复用到传输块上以在传送信道上传送到物理层 解复用MAC SDU 调度信息报告 通过HARQ纠错 逻辑通道优先级 MAC层实体处理的传输信道
广播频道（BCH） 寻呼信道（PCH） 下行链路共享信道（DL-SCH） 上行链路共享信道（UL-SCH） 随机接入信道（RACH） 注:BCCH映射到BCH和DL-SCH,BCCH分为MIB和SIB；MIB经过BCCH-BCH路径,而SIB经过BCCH-DLSCH路径</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://againwq.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/about/</guid>
      <description></description>
    </item>
    
    
    
    <item>
      <title>Tags</title>
      <link>https://againwq.github.io/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://againwq.github.io/tags/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
